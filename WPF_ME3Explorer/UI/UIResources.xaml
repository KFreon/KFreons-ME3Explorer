<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:s="clr-namespace:System;assembly=mscorlib"
                    xmlns:local="clr-namespace:WPF_ME3Explorer"
                    xmlns:localConverters="clr-namespace:WPF_ME3Explorer.UI.ValueConverters"
                    xmlns:po="http://schemas.microsoft.com/winfx/2006/xaml/presentation/options"
                    xmlns:usefulConverters="clr-namespace:UsefulThings.WPF.TypeConverters;assembly=UsefulThings">

    <usefulConverters:BoolToVisibilityConverter x:Key="BoolToVisConverter"/>
    <usefulConverters:InverseBooleanConverter x:Key="InverseBoolConverter"/>
    <localConverters:HashToStringConverter x:Key="HashStringConverter"/>
    <localConverters:ThumbnailConverter x:Key="ThumbnailConverter"/>
    <localConverters:ImageEngineFormatConverter x:Key="ImageEngineFormatConverter"/>
    <usefulConverters:DebugConverter x:Key="DebugConverter"/>


    <!-- Default images to display -->
    <BitmapImage x:Key="Folder_Closed" po:Freeze="True" UriSource="/WPF_ME3Explorer;component/Resources/Folder_Closed.png" DecodePixelHeight="32"/>
    <BitmapImage x:Key="Folder_Open" po:Freeze="True" UriSource="/WPF_ME3Explorer;component/Resources/Folder_Open.png" DecodePixelHeight="32"/>
    <BitmapImage x:Key="DefaultTexture" UriSource="/WPF_ME3Explorer;component/Resources/Placeholder.png" DecodePixelHeight="64"/>
    <BitmapImage x:Key="DefaultMesh" UriSource="/WPF_ME3Explorer;component/Resources/DefaultMesh.png" DecodePixelHeight="64"/>
    <BitmapImage x:Key="DefaultText" UriSource="/WPF_ME3Explorer;component/Resources/DefaultText.png" DecodePixelHeight="64"/>

    <!-- Boolean values for use as converter parameters -->
    <s:Boolean x:Key="True">True</s:Boolean>
    <s:Boolean x:Key="False">False</s:Boolean>

    <Style TargetType="Button" x:Key="BrowseButtonStyle">
        <Setter Property="DockPanel.Dock" Value="Right"/>
        <Setter Property="Padding" Value="10,2"/>
    </Style>

    <Style TargetType="ContentControl" x:Key="ItemTitleStyle">
        <Setter Property="FontWeight" Value="Bold"/>
        <Setter Property="DockPanel.Dock" Value="Left"/>
    </Style>

    <Style TargetType="Run" x:Key="ItemTitleStyle_2">
        <Setter Property="FontWeight" Value="Bold"/>
        <Setter Property="DockPanel.Dock" Value="Left"/>
    </Style>

    <Style TargetType="ContentControl" x:Key="TitleStyle">
        <Setter Property="FontSize" Value="30"/>
        <Setter Property="FontWeight" Value="Bold"/>
    </Style>

    <DataTemplate x:Key="PCC-ExpID Displayer">
        <StackPanel Orientation="Horizontal">
            <CheckBox IsChecked="{Binding IsChecked, UpdateSourceTrigger=PropertyChanged}" Margin="0,0,2,0" VerticalAlignment="Center"/>
            <TextBlock Text="{Binding DisplayName}" VerticalAlignment="Center" Margin="2,0"/>
            <TextBlock Text="@" Foreground="Blue" Margin="2,0"/>
            <TextBlock Text="{Binding ExpID}" VerticalAlignment="Center" Margin="2,0"/>
        </StackPanel>
    </DataTemplate>

    <Style x:Key="PCCListOptionsStyle" TargetType="FrameworkElement">
        <Setter Property="Visibility" Value="Visible"/>

        <Style.Triggers>
            <DataTrigger Binding="{Binding SelectedTexture}" Value="{x:Null}">
                <Setter Property="Visibility" Value="Collapsed"/>
            </DataTrigger>

            <DataTrigger Binding="{Binding SelectedTexture.PCCs.Count}" Value="0">
                <Setter Property="Visibility" Value="Collapsed"/>
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="CheckAllCheckBoxStyle" TargetType="CheckBox" BasedOn="{StaticResource PCCListOptionsStyle}">
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="Margin" Value="2,0,0,0"/>
        <Setter Property="IsThreeState" Value="True"/>
    </Style>

    <Style TargetType="MenuItem" x:Key="BaseMenuItemStyle">
        <Setter Property="FontSize"  Value="16"/>
        <Setter Property="Foreground" Value="Black"/>
    </Style>

    <Style TargetType="Menu">
        <Setter Property="IsEnabled" Value="True"/>

        <Style.Triggers>
            <DataTrigger Binding="{Binding Busy}" Value="true">
                <Setter Property="IsEnabled" Value="False"/>
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <ControlTemplate x:Key="SearchBoxTemplate" TargetType="TextBox">
        <ControlTemplate.Triggers>
            <EventTrigger RoutedEvent="GotFocus">
                <BeginStoryboard>
                    <Storyboard>
                        <DoubleAnimation Storyboard.TargetName="SearchBox" Storyboard.TargetProperty="(Effect).Opacity" From="0" To="1" Duration="0:0:0.1"/>
                    </Storyboard>
                </BeginStoryboard>
            </EventTrigger>

            <EventTrigger RoutedEvent="LostFocus">
                <BeginStoryboard>
                    <Storyboard>
                        <DoubleAnimation Storyboard.TargetName="SearchBox" Storyboard.TargetProperty="(Effect).Opacity" From="1" To="0" Duration="0:0:0.1"/>
                    </Storyboard>
                </BeginStoryboard>
            </EventTrigger>
        </ControlTemplate.Triggers>
        
        <Grid>
            <TextBox x:Name="SearchBox" Text="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Text, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}" VerticalContentAlignment="Center">
                <TextBox.Effect>
                    <DropShadowEffect BlurRadius="15" Color="LightBlue" Direction="0" ShadowDepth="0" Opacity="0"/>
                </TextBox.Effect>
            </TextBox>
            <Label x:Name="BlankText" Content="{TemplateBinding Tag}"  IsHitTestVisible="False" Foreground="Gray" Background="{x:Null}" Margin="2,0,0,0" Padding="3">
                <Label.Style>
                    <Style TargetType="Label">
                        <Style.Resources>
                            <Storyboard x:Key="FadeOutStoryboard">
                                <DoubleAnimation From="1" To="0" Duration="0:0:0.1" Storyboard.TargetProperty="Opacity"/>
                            </Storyboard>

                            <Storyboard x:Key="FadeInStoryboard">
                                <DoubleAnimation From="0" To="1" Duration="0:0:0.1" Storyboard.TargetProperty="Opacity"/>
                            </Storyboard>
                        </Style.Resources>
                        <Setter Property="Opacity" Value="1"/>
                        <Style.Triggers>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding ElementName=SearchBox, Path=Text}" Value=""/>
                                    <Condition Binding="{Binding ElementName=SearchBox, Path=IsMouseOver}" Value="false"/>
                                    <Condition Binding="{Binding ElementName=SearchBox, Path=IsFocused}" Value="false"/>
                                </MultiDataTrigger.Conditions>

                                <MultiDataTrigger.EnterActions>
                                    <BeginStoryboard Storyboard="{StaticResource FadeInStoryboard}"/>
                                </MultiDataTrigger.EnterActions>

                                <MultiDataTrigger.ExitActions>
                                    <BeginStoryboard Storyboard="{StaticResource FadeOutStoryboard}"/>
                                </MultiDataTrigger.ExitActions>
                            </MultiDataTrigger>
                        </Style.Triggers>
                    </Style>
                </Label.Style>
            </Label>
        </Grid>
    </ControlTemplate>

    <ControlTemplate x:Key="CancelButtonTemplate">
        <Grid>
            <Button x:Name="MainCancelButton" Content="Cancel" Visibility="{Binding Busy, Converter={StaticResource BoolToVisConverter}}" Background="{TemplateBinding Background}" VerticalAlignment="Center" 
                    Padding="10,2" Margin="10,0,3,0" IsEnabled="{Binding CancellationRequested, Converter={StaticResource InverseBoolConverter}}">
                <Button.Triggers>
                    <EventTrigger RoutedEvent="Button.Click">
                        <BeginStoryboard>
                            <Storyboard>
                                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="CancelConfirmationPanel" Storyboard.TargetProperty="Visibility">
                                    <DiscreteObjectKeyFrame KeyTime="0:0:0" Value="{x:Static Visibility.Visible}"/>
                                </ObjectAnimationUsingKeyFrames>

                                <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility">
                                    <DiscreteObjectKeyFrame KeyTime="0:0:0" Value="{x:Static Visibility.Collapsed}"/>
                                </ObjectAnimationUsingKeyFrames>
                            </Storyboard>
                        </BeginStoryboard>
                    </EventTrigger>
                </Button.Triggers>
            </Button>

            <StackPanel x:Name="CancelConfirmationPanel" Visibility="Collapsed" Orientation="Horizontal" Background="{TemplateBinding Background}">
                <StackPanel.Triggers>
                    <EventTrigger RoutedEvent="StackPanel.MouseLeave">
                        <BeginStoryboard>
                            <Storyboard>
                                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="CancelConfirmationPanel" Storyboard.TargetProperty="Visibility">
                                    <DiscreteObjectKeyFrame KeyTime="0:0:0" Value="{x:Static Visibility.Collapsed}"/>
                                </ObjectAnimationUsingKeyFrames>

                                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="MainCancelButton" Storyboard.TargetProperty="Visibility">
                                    <DiscreteObjectKeyFrame KeyTime="0:0:0" Value="{x:Static Visibility.Visible}"/>
                                </ObjectAnimationUsingKeyFrames>
                            </Storyboard>
                        </BeginStoryboard>
                    </EventTrigger>
                </StackPanel.Triggers>
                <Button Content="Yes" Command="{Binding CancelCommand}" Padding="6,2" Margin="0,0,5,0" Background="Red" Foreground="White">
                    <Button.Triggers>
                        <EventTrigger RoutedEvent="Button.Click">
                            <BeginStoryboard>
                                <Storyboard>
                                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="CancelConfirmationPanel" Storyboard.TargetProperty="Visibility">
                                        <DiscreteObjectKeyFrame KeyTime="0:0:0" Value="{x:Static Visibility.Collapsed}"/>
                                    </ObjectAnimationUsingKeyFrames>
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>
                    </Button.Triggers>
                </Button>
                <Label Content="---- Are you certain you want to cancel this operation?" FontWeight="Bold" Foreground="Red" VerticalAlignment="Center" VerticalContentAlignment="Center"/>
            </StackPanel>
        </Grid>
    </ControlTemplate>

    <Style x:Key="ProgressBarStyle" TargetType="ProgressBar">
        <Setter Property="Value" Value="{Binding Progress}"/>
        <Setter Property="Maximum" Value="{Binding MaxProgress}"/>
        <Setter Property="IsIndeterminate" Value="{Binding ProgressIndeterminate}"/>
    </Style>
    
    <ControlTemplate x:Key="StatusBarTemplate" TargetType="{x:Type StatusBar}">
        <DockPanel LastChildFill="False">
            <DockPanel.Resources>
                <Style TargetType="TextBlock">
                    <Setter Property="Foreground" Value="#FF8B8B8B"/>
                    <Setter Property="VerticalAlignment" Value="Center"/>
                    <Setter Property="Margin" Value="3,0,3,0"/>
                </Style>
            </DockPanel.Resources>
            <ProgressBar x:Name="PrimaryProgressBar" Style="{StaticResource ProgressBarStyle}" Width="200" Height="25"  DockPanel.Dock="Left"/>
            <TextBlock x:Name="PrimaryStatusText" Text="{Binding Status}" Margin="5,0"/>
            <Control Template="{StaticResource CancelButtonTemplate}" Background="White" DockPanel.Dock="Right"/>

            <TextBlock Text="WV, AK, Salt, Gibbed = The Real Heros" DockPanel.Dock="Right"/>
            <Label Content="|" DockPanel.Dock="Right" Foreground="Gray"/>
            <TextBlock x:Name="VersionString" Text="{Binding ToolsetVersion}" DockPanel.Dock="Right" FontStyle="Italic"/>
            <StackPanel x:Name="SystemDetails" Orientation="Vertical" DockPanel.Dock="Right" VerticalAlignment="Center" Margin="3,0,3,0">
                <TextBlock FontSize="8">
                    <Run Text="Memory: " FontWeight="Bold"/>
                    <Run Text="{Binding MemoryUsage}"/>
                </TextBlock>
                <TextBlock FontSize="8">
                    <Run Text="CPU: " FontWeight="Bold"/>
                    <Run Text="{Binding CPUUsage}"/>
                </TextBlock>
            </StackPanel>
        </DockPanel>
    </ControlTemplate>

    

    <Style TargetType="Button" x:Key="MainButtonStyle">
        <Setter Property="Background" Value="White"/>
        <Setter Property="Padding" Value="5,0"/>
        <Setter Property="Margin" Value="3,0"/>
    </Style>

    <Style TargetType="ListBoxItem" x:Key="ListBoxContainerStyle">
        <Setter Property="IsSelected" Value="{Binding IsSelected, Mode=TwoWay}"/>
        <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
    </Style>

    <Style TargetType="Button" x:Key="IndicatorStyle">
        <Setter Property="FontWeight" Value="Bold"/>
        <Setter Property="Foreground" Value="Red"/>
        <Setter Property="FontSize" Value="15"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="BorderBrush" Value="{x:Null}"/>
    </Style>

    <Style x:Key="Game1Indicator" TargetType="Button" BasedOn="{StaticResource IndicatorStyle}">
        <Style.Triggers>
            <DataTrigger Binding="{Binding GameDirecs.DoesGame1Exist}" Value="true">
                <Setter Property="Foreground" Value="LawnGreen"/>
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="Game2Indicator" TargetType="Button" BasedOn="{StaticResource IndicatorStyle}">
        <Style.Triggers>
            <DataTrigger Binding="{Binding GameDirecs.DoesGame2Exist}" Value="true">
                <Setter Property="Foreground" Value="LawnGreen"/>
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="Game3Indicator" TargetType="Button" BasedOn="{StaticResource IndicatorStyle}">
        <Style.Triggers>
            <DataTrigger Binding="{Binding GameDirecs.DoesGame3Exist}" Value="true">
                <Setter Property="Foreground" Value="LawnGreen"/>
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="TreeIndicatorStyle" TargetType="Button" BasedOn="{StaticResource IndicatorStyle}">
        <Style.Triggers>
            <DataTrigger Binding="{Binding Valid}" Value="true">
                <Setter Property="Foreground" Value="LawnGreen"/>
            </DataTrigger>

            <DataTrigger Binding="{Binding IsSelected}" Value="true">
                <Setter Property="BorderBrush" Value="Blue"/>
                <Setter Property="BorderThickness" Value="1"/>
                <Setter Property="Background" Value="AliceBlue"/>
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <ControlTemplate x:Key="GameIndicators">
        <StackPanel Orientation="Horizontal" Margin="5,0">
            <Label Content="Game Status:" VerticalAlignment="Center"/>
            <Button Content="1" Style="{StaticResource Game1Indicator}" Command="{Binding ShowGameInfoCommand}" CommandParameter="1" Focusable="False" IsTabStop="False"/>
            <Button Content="2" Style="{StaticResource Game2Indicator}" Command="{Binding ShowGameInfoCommand}" CommandParameter="2" Focusable="False" IsTabStop="False"/>
            <Button Content="3" Style="{StaticResource Game3Indicator}" Command="{Binding ShowGameInfoCommand}" CommandParameter="3" Focusable="False" IsTabStop="False"/>
        </StackPanel>
    </ControlTemplate>

    <ControlTemplate x:Key="TreeIndicators">
        <StackPanel x:Name="TreeContainer" Orientation="Horizontal" Margin="5,0" IsEnabled="{Binding Busy, Converter={StaticResource InverseBoolConverter}}">
            <Label Content="Tree Status:" VerticalAlignment="Center"/>
            <Button Content="1" Style="{StaticResource TreeIndicatorStyle}" DataContext="{Binding Trees[0]}" Command="{Binding ElementName=TreeContainer, Path=DataContext.ChangeTreeCommand}" CommandParameter="{Binding}"/>
            <Button Content="2" Style="{StaticResource TreeIndicatorStyle}" DataContext="{Binding Trees[1]}" Command="{Binding ElementName=TreeContainer, Path=DataContext.ChangeTreeCommand}" CommandParameter="{Binding}"/>
            <Button Content="3" Style="{StaticResource TreeIndicatorStyle}" DataContext="{Binding Trees[2]}" Command="{Binding ElementName=TreeContainer, Path=DataContext.ChangeTreeCommand}" CommandParameter="{Binding}"/>
        </StackPanel>
    </ControlTemplate>

    <Style TargetType="Border" x:Key="FadedBackgroundBorder">
        <Setter Property="Background" Value="#B2000000"/>
        <Setter Property="Grid.RowSpan" Value="4"/>
        <Setter Property="Grid.ColumnSpan" Value="5"/>
        <Setter Property="Visibility" Value="Collapsed"/>
        <Setter Property="Opacity" Value="0"/>

        <Style.Triggers>
            <DataTrigger Binding="{Binding Path=Tag, RelativeSource={RelativeSource Self}}" Value="true">
                <DataTrigger.EnterActions>
                    <BeginStoryboard>
                        <Storyboard>
                            <DoubleAnimation Storyboard.TargetProperty="Opacity" From="0" To="1" Duration="0:0:0.5"/>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility">
                                <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}"/>
                            </ObjectAnimationUsingKeyFrames>
                        </Storyboard>
                    </BeginStoryboard>
                </DataTrigger.EnterActions>

                <DataTrigger.ExitActions>
                    <BeginStoryboard>
                        <Storyboard>
                            <DoubleAnimation Storyboard.TargetProperty="Opacity" From="1" To="0" Duration="0:0:0.5"/>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility">
                                <DiscreteObjectKeyFrame KeyTime="0:0:0.5" Value="{x:Static Visibility.Collapsed}"/>
                            </ObjectAnimationUsingKeyFrames>
                        </Storyboard>
                    </BeginStoryboard>
                </DataTrigger.ExitActions>
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <Style TargetType="Border" x:Key="FadedInnerBorder">
        <Setter Property="Background" Value="White"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="CornerRadius" Value="10"/>
        <Setter Property="BorderBrush" Value="White"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Padding" Value="5,0,5,10"/>
    </Style>
</ResourceDictionary>