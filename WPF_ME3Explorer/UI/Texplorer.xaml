<Window x:Class="WPF_ME3Explorer.UI.Texplorer" x:Name="TexplorerWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:localUI="clr-namespace:WPF_ME3Explorer.UI"
        xmlns:local="clr-namespace:WPF_ME3Explorer"
        xmlns:ImgLib="clr-namespace:CSharpImageLibrary;assembly=CSharpImageLibrary"
        xmlns:VM="clr-namespace:WPF_ME3Explorer.UI.ViewModels"
        xmlns:VCs="clr-namespace:WPF_ME3Explorer.UI.ValueConverters"
        xmlns:usefulUIElements="clr-namespace:UsefulThings.WPF;assembly=UsefulThings"
        xmlns:i="clr-namespace:System.Windows.Interactivity;assembly=System.Windows.Interactivity"
        xmlns:sys="clr-namespace:System;assembly=mscorlib"
        mc:Ignorable="d"
        Title="Texplorer" Height="900.334" Width="1748.575" Closing="Window_Closing" Icon="/WPF_ME3Explorer;component/Resources/Texplorer icon.ico" PreviewKeyDown="TexplorerWindow_PreviewKeyDown">

    <Window.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="UIResources.xaml"/>
            </ResourceDictionary.MergedDictionaries>
        </ResourceDictionary>

        
    </Window.Resources>
    
    <Window.TaskbarItemInfo>
        <TaskbarItemInfo x:Name="TaskBarProgressMeter" Description="Texplorer" ProgressValue="{Binding TaskBarProgress, Mode=OneWay}"/>
    </Window.TaskbarItemInfo>
    
    
    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="331"/>
            <ColumnDefinition Width="739*"/>
            <ColumnDefinition Width="344*"/>
            <ColumnDefinition Width="329"/>
        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
            <RowDefinition Height="25"/>
            <RowDefinition Height="406*"/>
            <RowDefinition Height="30"/>
        </Grid.RowDefinitions>

        <Grid.Resources>
            <VCs:NullableBool_NullIsTrueConverter x:Key="NullableConv"/>
            
            <DataTemplate x:Key="SmallItemTemplate">
                <StackPanel x:Name="SearchResultsItem" Orientation="Horizontal" MouseDown="SearchResultsItem_MouseDown" Background="Transparent">
                    <Image Source="{Binding Thumb, Converter={StaticResource ThumbnailConverter}, ConverterParameter={StaticResource DefaultTexture}}" Height="64" Width="64"/>
                    <TextBlock Text="{Binding TexName}" Margin="5,0,10,0" VerticalAlignment="Center"/>
                    <StackPanel VerticalAlignment="Center">
                        <StackPanel.Resources>
                            <Style TargetType="{x:Type TextBlock}">
                                <Setter Property="FontSize" Value="9"/>
                                <Setter Property="Foreground" Value="Gray"/>
                            </Style>
                        </StackPanel.Resources>

                        <TextBlock Text="{Binding Format, Converter={StaticResource ImageEngineFormatConverter}}"/>
                        <TextBlock Text="{Binding Hash, Converter={StaticResource HashStringConverter}}"/>
                    </StackPanel>
                </StackPanel>
            </DataTemplate>
        </Grid.Resources>
        <Grid.Style>
            <Style TargetType="Grid">
                <Style.Triggers>
                    <DataTrigger Binding="{Binding TPFToolsModeEnabled}" Value="true">
                        <Setter Property="Background" Value="AliceBlue"/>
                    </DataTrigger>
                </Style.Triggers>
            </Style>
        </Grid.Style>


        <Menu x:Name="MainMenuBar" Grid.ColumnSpan="2">
            <Menu.Style>
                <Style TargetType="Menu">
                    <Setter Property="Background" Value="White"/>
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding TPFToolsModeEnabled}" Value="true">
                            <Setter Property="Background" Value="LightBlue"/>
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </Menu.Style>
            <MenuItem x:Name="SaveChangesButton" Header="Save Changes" Command="{Binding SaveChangesCommand}">
                <MenuItem.Style>
                    <Style TargetType="MenuItem" BasedOn="{StaticResource BaseMenuItemStyle}">
                        <Setter Property="IsEnabled" Value="True"/>

                        <Style.Triggers>
                            <DataTrigger Binding="{Binding ChangedTextures.Count}" Value="0">
                                <Setter Property="IsEnabled" Value="False"/>
                            </DataTrigger>


                            <DataTrigger Binding="{Binding TPFToolsModeEnabled}" Value="true">
                                <Setter Property="IsEnabled" Value="False"/>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </MenuItem.Style>
            </MenuItem>
            <MenuItem x:Name="StartTPFToolsMenu" IsEnabled="{Binding CurrentTree.Valid}" Style="{StaticResource BaseMenuItemStyle}" Header="Start TPFTools Mode" 
                      Command="{Binding StartTPFToolsModeCommand}" Visibility="{Binding TPFToolsModeEnabled, Converter={StaticResource BoolToVisConverter}, ConverterParameter={StaticResource True}}"/>
            <MenuItem x:Name="StopTPFToolsMenu" IsEnabled="{Binding CurrentTree.Valid}" Style="{StaticResource BaseMenuItemStyle}" Header="Stop TPFTools Mode" 
                      Command="{Binding StopTPFToolsModeCommand}" Visibility="{Binding TPFToolsModeEnabled, Converter={StaticResource BoolToVisConverter}}"/>
            <MenuItem x:Name="AdvancedMenu" IsEnabled="{Binding CurrentTree.Valid}" Style="{StaticResource BaseMenuItemStyle}" Header="Advanced">
                <MenuItem x:Name="RegenerateTopMenu" Header="Regenerate All Thumbnails" Click="RegenerateTopMenu_Click"/>
                <MenuItem x:Name="RemoveNullsMenu" Header="Remove Null Pointers" Command="{Binding RemoveNullPointersCommand}"/>
            </MenuItem>
        </Menu>

        <StackPanel x:Name="GameAndTreeIndicators" Orientation="Horizontal" Grid.Column="3" HorizontalAlignment="Right" Margin="0,0,0,0.333">
            <ContentControl x:Name="GameIndicatorPanel" Template="{StaticResource GameIndicators}"/>
            <ContentControl x:Name="TreeIndicatorPanel" Template="{StaticResource TreeIndicators}"/>
            <Button x:Name="SettingsButton" Content="Settings" Style="{StaticResource MainButtonStyle}" Focusable="False">
                <Button.Resources>
                    <Storyboard x:Key="TreeScanPanelOpener">
                        <DoubleAnimation Storyboard.TargetName="TreeScanPanel" Storyboard.TargetProperty="Width" From="0" To="1500" Duration="0:0:1" DecelerationRatio="1">
                            <DoubleAnimation.EasingFunction>
                                <CubicEase EasingMode="EaseOut"/>
                            </DoubleAnimation.EasingFunction>
                        </DoubleAnimation>

                        <DoubleAnimation Storyboard.TargetName="TreeScanBackground" Storyboard.TargetProperty="Opacity" From="0" To="1" Duration="0:0:1" DecelerationRatio="1">
                            <DoubleAnimation.EasingFunction>
                                <CubicEase EasingMode="EaseOut"/>
                            </DoubleAnimation.EasingFunction>
                        </DoubleAnimation>

                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="TreeScanBackground" Storyboard.TargetProperty="Visibility">
                            <DiscreteObjectKeyFrame KeyTime="0:0:0" Value="{x:Static Visibility.Visible}"/>
                        </ObjectAnimationUsingKeyFrames>

                        <BooleanAnimationUsingKeyFrames Storyboard.TargetName="TreeScanBackground" Storyboard.TargetProperty="IsHitTestVisible">
                            <DiscreteBooleanKeyFrame KeyTime="0:0:0" Value="true"/>
                        </BooleanAnimationUsingKeyFrames>
                    </Storyboard>
                </Button.Resources>
                <Button.Triggers>
                    <EventTrigger RoutedEvent="Button.Click">
                        <BeginStoryboard Storyboard="{StaticResource TreeScanPanelOpener}"/>
                    </EventTrigger>
                </Button.Triggers>
            </Button>
        </StackPanel>

        <TreeView x:Name="MainTreeView" ItemsSource="{Binding CurrentTree.TextureFolders}" VirtualizingPanel.IsVirtualizing="True" KeyDown="MainTreeView_KeyDown" MouseDown="MainTreeView_MouseDown" Grid.ColumnSpan="2" 
                  Margin="0,25,738.167,0.333" Grid.RowSpan="2">
            <i:Interaction.Behaviors>
                <usefulUIElements:TreeViewNodeSelectionBehaviour SelectedItem="{Binding SelectedFolder}"/>
            </i:Interaction.Behaviors>
            <TreeView.Resources>
                <Style TargetType="TreeViewItem">
                    <Setter Property="IsExpanded" Value="{Binding IsExpanded, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                    <Setter Property="IsSelected" Value="{Binding IsSelected, Mode=OneWayToSource}"/>
                </Style>
            </TreeView.Resources>
            <TreeView.ItemTemplate>
                <HierarchicalDataTemplate ItemsSource="{Binding Folders}">
                    <StackPanel Orientation="Horizontal" Background="Transparent" MouseMove="MainTreeView_MouseMove">
                        <StackPanel.ContextMenu>
                            <ContextMenu>
                                <MenuItem Header="Regenerate Thumbnails (current Folder only)" Command="{Binding RegenerateThumbsCommand}">
                                    <MenuItem.Icon>
                                        <Image Source="/WPF_ME3Explorer;component/Resources/RegenerateFolder.png" />
                                    </MenuItem.Icon>
                                </MenuItem>
                                <MenuItem Header="Regenerate Sub Folder Thumbnails (incl this)" Command="{Binding RegenerateSubThumbsCommand}">
                                    <MenuItem.Icon>
                                        <Image Source="/WPF_ME3Explorer;component/Resources/RegenerateSubFolders.png"/>
                                    </MenuItem.Icon>
                                </MenuItem>
                                <MenuItem Header="Extract Textures from Folder" Command="{Binding ExtractFolderTexturesCommand}">
                                    <MenuItem.Icon>
                                        <Image Source="/WPF_ME3Explorer;component/Resources/ExtractTexture.png"/>
                                    </MenuItem.Icon>
                                </MenuItem>
                            </ContextMenu>
                        </StackPanel.ContextMenu>
                        <Image>
                            <Image.Style>
                                <Style TargetType="Image">
                                    <Setter Property="Source" Value="{StaticResource Folder_Closed}"/>

                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding IsExpanded}" Value="True">
                                            <Setter Property="Source" Value="{StaticResource Folder_Open}"/>
                                        </DataTrigger>

                                        <MultiDataTrigger>
                                            <MultiDataTrigger.Conditions>
                                                <Condition Binding="{Binding IsSelected}" Value="true"/>
                                                <Condition Binding="{Binding Children.Count}" Value="0"/>
                                            </MultiDataTrigger.Conditions>

                                            <MultiDataTrigger.Setters>
                                                <Setter Property="Source" Value="{StaticResource Folder_Open}"/>
                                            </MultiDataTrigger.Setters>
                                        </MultiDataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </Image.Style>
                        </Image>

                        <TextBlock VerticalAlignment="Center" Margin="10,0,0,0">
                            <Run Text="{Binding Name}"/>
                            <Separator Margin="3,0"/>
                            <Run Text="{Binding TotalTextureCount, Mode=OneWay}">
                                <Run.Style>
                                    <Style TargetType="Run">
                                        <Setter Property="Foreground" Value="Gray"/>
                                        
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding IsSelected}" Value="True">
                                                <Setter Property="Foreground" Value="LightGray"/>
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </Run.Style>
                            </Run>
                        </TextBlock>
                    </StackPanel>
                </HierarchicalDataTemplate>
            </TreeView.ItemTemplate>
        </TreeView>

        <ListBox x:Name="MainDisplayPanel" Grid.Column="1" ItemsSource="{Binding ElementName=MainTreeView, Path=SelectedItem.Textures}" ScrollViewer.HorizontalScrollBarVisibility="Disabled" 
                 SelectedItem="{Binding SelectedTexture, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Grid.ColumnSpan="3" Margin="0.333,25,329,0.333" Grid.RowSpan="2">
            <ListBox.ItemsPanel>
                <ItemsPanelTemplate>
                    <usefulUIElements:VirtualizingWrapPanel x:Name="VirtualWrapper"/>
                </ItemsPanelTemplate>
            </ListBox.ItemsPanel>
            <ListBox.ItemTemplate>
                <DataTemplate>
                    <Border x:Name="MainListView" MouseDown="MainListView_MouseDown" AllowDrop="True" Drop="MainDisplayPanel_Drop" MouseMove="MainListView_MouseMove" DragOver="MainListView_DragOver" 
                            BorderBrush="Transparent" BorderThickness="2" DragEnter="MainListView_DragEnter" DragLeave="MainListView_DragLeave">
                        <DockPanel>
                            <DockPanel.Style>
                                <Style TargetType="DockPanel">
                                    <Setter Property="Background" Value="Transparent"/>

                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding HasChanged}" Value="true">
                                            <Setter Property="Background" Value="#2FFF0000"/>
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </DockPanel.Style>
                            <DockPanel.ContextMenu>
                                <ContextMenu>
                                    <ContextMenu.Resources>
                                        <Style x:Key="ME1_ItemsStyle" TargetType="MenuItem">
                                            <Setter Property="Visibility" Value="Collapsed"/>
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding GameVersion}" Value="1">
                                                    <Setter Property="Visibility" Value="Visible"/>
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </ContextMenu.Resources>
                                    <MenuItem Header="Change" Command="{Binding ChangeCommand}" CommandParameter="{Binding}">
                                        <MenuItem.Icon>
                                            <Image Source="/WPF_ME3Explorer;component/Resources/ChangeTexture.png"/>
                                        </MenuItem.Icon>
                                    </MenuItem>
                                    <MenuItem Header="Extract" Command="{Binding ExtractCommand}" CommandParameter="{Binding}">
                                        <MenuItem.Icon>
                                            <Image Source="/WPF_ME3Explorer;component/Resources/ExtractTexture.png"/>
                                        </MenuItem.Icon>
                                    </MenuItem>
                                    <MenuItem Header="Regenerate Thumbnail" Command="{Binding RegenerateThumbCommand}" CommandParameter="{Binding}">
                                        <MenuItem.Icon>
                                            <Image Source="/WPF_ME3Explorer;component/Resources/RegenerateSingle.png"/>
                                        </MenuItem.Icon>
                                    </MenuItem>
                                    <MenuItem Header="Export Tex and Info" Command="{Binding ExportTexAndInfoCommand}" CommandParameter="{Binding}">
                                        <MenuItem.Icon>
                                            <Image Source="/WPF_ME3Explorer;component/Resources/ExportTexandInfo.png"/>
                                        </MenuItem.Icon>
                                    </MenuItem>

                                    <MenuItem Header="Try Low Res Fix" Style="{StaticResource ME1_ItemsStyle}" Command="{Binding LowResFixCommand}" CommandParameter="{Binding}">
                                        <MenuItem.Icon>
                                            <Image Source="/WPF_ME3Explorer;component/Resources/LowResFix.png"/>
                                        </MenuItem.Icon>
                                    </MenuItem>

                                    <MenuItem Header="Restore Original" Visibility="{Binding HasChanged, Converter={StaticResource BoolToVisConverter}}" Command="{Binding RestoreOriginalCommand}">
                                        <MenuItem.Icon>
                                            <Image Source="/WPF_ME3Explorer;component/Resources/UndoChanges.png"/>
                                        </MenuItem.Icon>
                                    </MenuItem>
                                </ContextMenu>
                            </DockPanel.ContextMenu>
                            <Image Source="{Binding Thumb, Converter={StaticResource ThumbnailConverter}, ConverterParameter={StaticResource DefaultTexture}}" Width="128" Height="128" DockPanel.Dock="Top" Margin="5,0"/>
                            <TextBlock Text="{Binding TexName}" HorizontalAlignment="Center" VerticalAlignment="Bottom" DockPanel.Dock="Bottom" Margin="0,2,0,5"/>
                        </DockPanel>
                    </Border>
                </DataTemplate>
            </ListBox.ItemTemplate>
        </ListBox>

        <Grid x:Name="PreviewPanel" Grid.Column="1" MouseDown="PreviewPanel_MouseDown" Grid.ColumnSpan="3" Margin="0.333,25,329,0.333" Grid.RowSpan="2">
            <Grid.Style>
                <Style TargetType="Grid">
                    <Setter Property="Visibility" Value="Collapsed"/>
                    <Setter Property="Background" Value="Transparent"/>

                    <Style.Triggers>
                        <DataTrigger Binding="{Binding ShowingPreview}" Value="True">
                            <DataTrigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <ColorAnimation Storyboard.TargetProperty="(Grid.Background).(SolidColorBrush.Color)" From="Transparent" To="#CC000000" Duration="0:0:0.3" DecelerationRatio="1">
                                            <ColorAnimation.EasingFunction>
                                                <CubicEase EasingMode="EaseOut"/>
                                            </ColorAnimation.EasingFunction>
                                        </ColorAnimation>

                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility">
                                            <DiscreteObjectKeyFrame KeyTime="0:0:0" Value="{x:Static Visibility.Visible}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </BeginStoryboard>
                            </DataTrigger.EnterActions>

                            <DataTrigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <ColorAnimation Storyboard.TargetProperty="(Grid.Background).(SolidColorBrush.Color)" To="Transparent" Duration="0:0:0.3" DecelerationRatio="1">
                                            <ColorAnimation.EasingFunction>
                                                <CubicEase EasingMode="EaseOut"/>
                                            </ColorAnimation.EasingFunction>
                                        </ColorAnimation>

                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility">
                                            <DiscreteObjectKeyFrame KeyTime="0:0:0.3" Value="{x:Static Visibility.Collapsed}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </BeginStoryboard>
                            </DataTrigger.ExitActions>
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </Grid.Style>
            <usefulUIElements:PanAndZoomBorder x:Name="PreviewBorder" HorizontalAlignment="Center" VerticalAlignment="Center">
                <Image Source="{Binding PreviewImage, IsAsync=True}"/>
            </usefulUIElements:PanAndZoomBorder>
        </Grid>
        <Grid x:Name="DetailsArea" Grid.Column="3" Margin="0.333,25,0,0.333" Grid.RowSpan="2">
            <Grid.RowDefinitions>
                <RowDefinition Height="427*"/>
                <RowDefinition Height="389*"/>
            </Grid.RowDefinitions>

            <Grid.Resources>
                <Style TargetType="TextBlock">
                    <Setter Property="VerticalAlignment" Value="Top"/>
                </Style>
            </Grid.Resources>

            <TextBox x:Name="SearchBox" Text="{Binding TextureSearch, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}" 
                     Template="{StaticResource SearchBoxTemplate}" Tag="Search..." VerticalAlignment="Top" BorderBrush="{x:Null}" Margin="0,0,0.333,0" Height="22"/>

            <DockPanel x:Name="SelectedTextureDetails" Margin="0,35,0.333,1.667" LastChildFill="False" DataContext="{Binding ElementName=MainDisplayPanel, Path=SelectedItem}">
                <DockPanel.Resources>
                    <Style TargetType="TextBlock">
                        <Setter Property="DockPanel.Dock" Value="Top"/>
                        <Setter Property="Margin" Value="2,1"/>
                    </Style>
                </DockPanel.Resources>
                <Viewbox DockPanel.Dock="Top" VerticalAlignment="Top" Height="30" Margin="7,0">
                    <TextBlock>
                        <Run Text="{Binding TexName, Mode=OneWay}" FontWeight="Bold"/>
                    </TextBlock>
                </Viewbox>

                <Grid DockPanel.Dock="Top">
                    <Grid.Style>
                        <Style TargetType="Grid">
                            <Setter Property="Visibility" Value="Visible"/>

                            <Style.Triggers>
                                <DataTrigger Binding="{Binding TexName}" Value="{x:Null}">
                                    <Setter Property="Visibility" Value="Collapsed"/>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </Grid.Style>
                    <Line Stroke="LightSkyBlue" StrokeThickness="1" X1="10" X2="210" Y1="215" Y2="215"/>
                    <Line Stroke="LightSkyBlue" StrokeThickness="1" X1="215" X2="215" Y1="10" Y2="210"/>
                    <Label Content="{Binding Width}" Margin="2,210,119.333,62" HorizontalContentAlignment="Center" FontSize="15"/>
                    <Label Content="{Binding Height}" Margin="215,60,0.333,173" VerticalContentAlignment="Center" FontSize="15"/>

                    <Border Width="200" Height="200" HorizontalAlignment="Left" VerticalAlignment="Top" Margin="10,10" BorderBrush="#FF404040" BorderThickness="2">
                        <StackPanel HorizontalAlignment="Center" VerticalAlignment="Center">
                            <StackPanel.Resources>
                                <Style TargetType="TextBlock">
                                    <Setter Property="TextAlignment" Value="Center"/>
                                    <Setter Property="Margin" Value="0,0,0,10"/>
                                </Style>
                            </StackPanel.Resources>
                            <TextBlock>
                                <Run Text="Format" FontSize="15"/>
                                <LineBreak/>
                                <Run Text="{Binding Format, Converter={StaticResource ImageEngineFormatConverter}}" FontSize="20"/>
                            </TextBlock>

                            <TextBlock>
                                <Run Text="Mipmaps" FontSize="15"/>
                                <LineBreak/>
                                <Run Text="{Binding Mips}" FontSize="20"/>
                            </TextBlock>

                            <TextBlock Margin="0">
                                <Run Text="Texmod Hash" FontSize="15"/>
                            </TextBlock>

                            <TextBox IsReadOnly="True" Text="{Binding Hash, Converter={StaticResource HashStringConverter}}" FontSize="20" BorderBrush="{x:Null}"/>
                        </StackPanel>
                    </Border>


                    <StackPanel Margin="2,243,2.333,1">
                        <TextBlock >
                            <Run Text="Package: " FontStyle="Italic" FontWeight="Bold"/>
                            <Run Text="{Binding FullPackage, Mode=OneWay}"/>
                        </TextBlock>

                        <TextBlock >
                            <Run Text="LODGroup: " FontStyle="Italic" FontWeight="Bold"/>
                            <Run Text="{Binding LODGroup, Mode=OneWay}"/>
                        </TextBlock>

                        <TextBlock>
                            <Run Text="Storage Type: " FontStyle="Italic" FontWeight="Bold"/>
                            <Run Text="{Binding StorageType, Mode=OneWay}"/>
                        </TextBlock>

                        <TextBlock TextWrapping="Wrap">
                            <Run Text="Texture Cache: " FontStyle="Italic" FontWeight="Bold"/>
                            <Run Text="{Binding TextureCache, Mode=OneWay}"/>
                        </TextBlock>
                    </StackPanel>
                </Grid>
            </DockPanel>
            <ListBox x:Name="SearchResultsBox" Margin="0,22,0.333,4.667" ItemsSource="{Binding TextureSearchResults}" Background="White" ItemTemplate="{StaticResource SmallItemTemplate}" >
                <ListBox.Style>
                    <Style TargetType="{x:Type ListBox}">
                        <Setter Property="Opacity" Value="0"/>
                        <Setter Property="Visibility" Value="Collapsed"/>

                        <Style.Triggers>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding HasSearchResults}" Value="True"/>
                                    <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsMouseCaptureWithin}" Value="true"/>
                                </MultiDataTrigger.Conditions>

                                <MultiDataTrigger.Setters>
                                    <Setter Property="Opacity" Value="1"/>
                                    <Setter Property="Visibility" Value="Visible"/>
                                </MultiDataTrigger.Setters>
                            </MultiDataTrigger>

                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding HasSearchResults}" Value="True"/>
                                    <Condition Binding="{Binding ElementName=SearchBox, Path=IsKeyboardFocusWithin}" Value="true"/>
                                </MultiDataTrigger.Conditions>

                                <MultiDataTrigger.Setters>
                                    <Setter Property="Opacity" Value="1"/>
                                    <Setter Property="Visibility" Value="Visible"/>
                                </MultiDataTrigger.Setters>
                            </MultiDataTrigger>
                        </Style.Triggers>
                    </Style>
                </ListBox.Style>
            </ListBox>

            <CheckBox x:Name="PCCsCheckAllChecker" IsChecked="{Binding PCCsCheckAll}" Style="{StaticResource CheckAllCheckBoxStyle}" HorizontalAlignment="Left" Grid.Row="1" VerticalAlignment="Top" Margin="5,15"/>
            <Button x:Name="SavePCCsListButton" Content="Save List" VerticalAlignment="Top" HorizontalAlignment="Right" Grid.Row="1" Style="{StaticResource PCCListOptionsStyle}" Background="White" Margin="5,10" Padding="10,2" Click="SavePCCsListButton_Click"/>
            <Label Content="PCC's" Grid.Row="1" VerticalAlignment="Top" FontWeight="Bold" FontSize="20" HorizontalAlignment="Center"/>
            <ListBox x:Name="PCCsListBox" Grid.Row="1" Margin="0,34.333,0.333,0" ItemsSource="{Binding ElementName=MainDisplayPanel, Path=SelectedItem.PCCs}" ItemTemplate="{StaticResource PCC-ExpID Displayer}"/>
        </Grid>

        <StatusBar Template="{StaticResource StatusBarTemplate}" Grid.Row="2" Grid.ColumnSpan="4"/>
        <Expander Grid.Column="2" Grid.RowSpan="2">
            <Expander.Style>
                <Style TargetType="{x:Type Expander}">
                    <Setter Property="Visibility" Value="Visible"/>

                    <Style.Triggers>
                        <DataTrigger Binding="{Binding ChangedTextures.Count}" Value="0">
                            <Setter Property="Visibility" Value="Collapsed"/>
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </Expander.Style>
            <Expander.Header>
                <TextBlock>
                    <Run Text="Changed Textures: " FontWeight="Bold"/>
                    <Run Text=" "/><Run Text=" "/>
                    <Run Text=" "/><Run Text="{Binding ChangedTextures.Count, Mode=OneWay}"/>
                </TextBlock>
            </Expander.Header>
            <ListBox ItemTemplate="{StaticResource SmallItemTemplate}" ItemsSource="{Binding ChangedTextures}"/>
        </Expander>

        <Grid Grid.RowSpan="3" Grid.ColumnSpan="4" x:Name="TreeScanBackground" Background="Black" Margin="0,0,0,0.333">
            <Grid.Resources>
                <DoubleAnimation x:Key="TreeScanPanelClose" Storyboard.TargetName="TreeScanPanel" Storyboard.TargetProperty="Width" From="1500" To="0" Duration="0:0:1" DecelerationRatio="1">
                    <DoubleAnimation.EasingFunction>
                        <CubicEase EasingMode="EaseOut"/>
                    </DoubleAnimation.EasingFunction>
                </DoubleAnimation>

                <DoubleAnimation x:Key="TreeScanBackGroundFader" Storyboard.TargetName="TreeScanBackground" Storyboard.TargetProperty="Opacity" From="1" To="0" Duration="0:0:1" DecelerationRatio="1">
                    <DoubleAnimation.EasingFunction>
                        <CubicEase EasingMode="EaseOut"/>
                    </DoubleAnimation.EasingFunction>
                </DoubleAnimation>

                <ObjectAnimationUsingKeyFrames x:Key="TreeScanBackGroundVisibility" Storyboard.TargetName="TreeScanBackground" Storyboard.TargetProperty="Visibility">
                    <DiscreteObjectKeyFrame KeyTime="0:0:1" Value="{x:Static Visibility.Collapsed}"/>
                </ObjectAnimationUsingKeyFrames>

                <BooleanAnimationUsingKeyFrames x:Key="TreeScanBackGroundHitTest" Storyboard.TargetName="TreeScanBackground" Storyboard.TargetProperty="IsHitTestVisible">
                    <DiscreteBooleanKeyFrame KeyTime="0:0:0.8" Value="false"/>
                </BooleanAnimationUsingKeyFrames>

                <Storyboard x:Key="TreeScanClosePanelAnimation">
                    <StaticResource ResourceKey="TreeScanPanelClose"/>
                    <StaticResource ResourceKey="TreeScanBackGroundFader"/>
                    <StaticResource ResourceKey="TreeScanBackGroundVisibility"/>
                    <StaticResource ResourceKey="TreeScanBackGroundHitTest"/>
                </Storyboard>

                <Storyboard x:Key="ProgressPanelOpener">
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ProgressPanel" Storyboard.TargetProperty="Visibility">
                        <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}"/>
                    </ObjectAnimationUsingKeyFrames>

                    <BooleanAnimationUsingKeyFrames Storyboard.TargetName="ProgressPanel" Storyboard.TargetProperty="IsHitTestVisible">
                        <DiscreteBooleanKeyFrame KeyTime="0" Value="true"/>
                    </BooleanAnimationUsingKeyFrames>

                    <DoubleAnimation Storyboard.TargetName="ProgressPanel" Storyboard.TargetProperty="Opacity" From="0" To="1" Duration="0:0:1" DecelerationRatio="1">
                        <DoubleAnimation.EasingFunction>
                            <CubicEase EasingMode="EaseOut"/>
                        </DoubleAnimation.EasingFunction>
                    </DoubleAnimation>
                </Storyboard>
            </Grid.Resources>

            <Grid x:Name="TreeScanPanel"  Background="White" HorizontalAlignment="Right" Margin="0,0,0,0.333" Width="1500">
                <Grid.Resources>
                    <Style TargetType="Button">
                        <Setter Property="IsEnabled" Value="True"/>

                        <Style.Triggers>
                            <DataTrigger Binding="{Binding Busy}" Value="true">
                                <Setter Property="IsEnabled" Value="False"/>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </Grid.Resources>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition/>
                    <ColumnDefinition Width="354"/>
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                    <RowDefinition Height="50*"/>
                    <RowDefinition Height="713*"/>
                </Grid.RowDefinitions>

                <Button Content="-->" VerticalAlignment="Center" HorizontalAlignment="Left" Background="White" FontSize="20" Height="31" Margin="0,10,0,9.667" Width="34" Style="{x:Null}">
                    <Button.Triggers>
                        <EventTrigger RoutedEvent="Button.Click">
                            <BeginStoryboard Storyboard="{StaticResource TreeScanClosePanelAnimation}"/>
                        </EventTrigger>
                    </Button.Triggers>
                </Button>
                <TextBlock HorizontalAlignment="Center" VerticalAlignment="Center" Grid.ColumnSpan="2">
                    <TextBlock.Resources>
                        <Style TargetType="Run">
                            <Setter Property="FontWeight" Value="Bold"/>
                            <Setter Property="FontSize" Value="25"/>
                        </Style>
                    </TextBlock.Resources>
                
                <Run Text="Tree Scan Information for ME"/>
                <Run Text="{Binding GameVersion, Mode=OneWay}"/>
                </TextBlock>

                <DockPanel x:Name="GameFileInfoPanel" Grid.Row="1" Margin="0,0.333,17,0.333">
                    <TextBlock DockPanel.Dock="Top" HorizontalAlignment="Center" Text="Exclusions" FontWeight="Bold" FontSize="30"/>
                    <TextBlock DockPanel.Dock="Top" HorizontalAlignment="Center" Text="This panel is for removing specific DLC's or PCC's from the Tree Scanning process. You may have a DLC you don't want included, or a file that is causing trouble." Margin="0,10,0,0"/>
                    <TextBlock DockPanel.Dock="Top" HorizontalAlignment="Center" Text="NOTE: If a tree is loaded, exclusions are the files already scanned for that tree." Margin="0,0,0,5"/>


                    <DockPanel DockPanel.Dock="Bottom">
                        <CheckBox Content="Remove Null Pointers" DockPanel.Dock="Left" VerticalAlignment="Center" VerticalContentAlignment="Center" HorizontalAlignment="Left" IsChecked="{Binding RemoveNullPointers}">
                            <CheckBox.Style>
                                <Style TargetType="CheckBox">
                                    <Setter Property="IsEnabled" Value="True"/>
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding GameVersion}" Value="1">
                                            <Setter Property="IsEnabled" Value="False"/>
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </CheckBox.Style>
                        </CheckBox>
                        <Label Content="Prevents weird artifacting when upscaling." VerticalAlignment="Center" FontSize="9" Foreground="Gray"/>
                        <Button x:Name="BeginScanButton" DockPanel.Dock="Bottom" HorizontalAlignment="Center" FontSize="20" Margin="0,2" Padding="7,0" Click="BeginScanButton_Click">
                        <Button.Style>
                            <Style TargetType="Button">
                                <Setter Property="Content" Value="Begin Scan!"/>

                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding CurrentTree.Valid}" Value="true">
                                        <Setter Property="Content" Value="Add to Tree!"/>
                                    </DataTrigger>

                                    <DataTrigger Binding="{Binding ElementName=DLCsListBox, Path=Items.Count}" Value="0">
                                        <Setter Property="IsEnabled" Value="False"/>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </Button.Style>

                        <Button.Triggers>
                            <EventTrigger RoutedEvent="Button.Click">
                                <BeginStoryboard Storyboard="{StaticResource TreeScanClosePanelAnimation}"/>
                                <BeginStoryboard Storyboard="{StaticResource ProgressPanelOpener}"/>
                            </EventTrigger>
                        </Button.Triggers>
                    </Button>
                    </DockPanel>

                    <Grid DockPanel.Dock="Right">
                        <Grid.Resources>
                            <DataTemplate x:Key="ListTemplate">
                                <DockPanel>
                                    <CheckBox IsChecked="{Binding IsExcluded, Mode=TwoWay}" VerticalContentAlignment="Center" DockPanel.Dock="Left" Margin="2,0,5,0"/>
                                    <TextBlock Text="{Binding Name}" DockPanel.Dock="Left"/>
                                </DockPanel>
                            </DataTemplate>

                            <DataTemplate x:Key="ExcludedListTemplate">
                                <DockPanel>
                                    <DockPanel.Style>
                                        <Style TargetType="DockPanel">
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding IsExcluded, Converter={StaticResource NullableConv}}" Value="true">
                                                    <Setter Property="Background" Value="Pink"/>
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </DockPanel.Style>
                                    <CheckBox IsChecked="{Binding IsExcluded, Mode=TwoWay, Converter={StaticResource NullableConv}}" VerticalContentAlignment="Center" DockPanel.Dock="Left" Margin="2,0,5,0"/>
                                    <TextBlock Text="{Binding Name}" DockPanel.Dock="Left"/>
                                </DockPanel>
                            </DataTemplate>

                            <Style TargetType="Label">
                                <Setter Property="HorizontalAlignment" Value="Center"/>
                                <Setter Property="FontWeight" Value="Bold"/>
                                <Setter Property="DockPanel.Dock" Value="Top"/>
                            </Style>

                            <Style TargetType="ListBox">
                                <Setter Property="ItemTemplate" Value="{StaticResource ListTemplate}"/>
                                <Setter Property="Margin" Value="5,0"/>
                            </Style>

                            <Style TargetType="TextBox">
                                <Setter Property="Margin" Value="2,1"/>
                                <Setter Property="DockPanel.Dock" Value="Top"/>
                            </Style>
                        </Grid.Resources>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="173*"/>
                            <ColumnDefinition Width="362*"/>
                            <ColumnDefinition Width="361*"/>
                        </Grid.ColumnDefinitions>
                        <Grid>
                            <Label Content="DLCs" VerticalAlignment="Top"/>
                            <Button Content="Exclude All" VerticalAlignment="Top" HorizontalAlignment="Left" Margin="5,5,0,0" Command="{Binding FTSExcludeAll}">
                                <Button.Style>
                                    <Style TargetType="Button" BasedOn="{StaticResource MainButtonStyle}">
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding ElementName=DLCsListBox, Path=Items.Count}" Value="0">
                                                <Setter Property="IsEnabled" Value="False"/>
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </Button.Style>
                            </Button>
                            <ListBox x:Name="DLCsListBox" ItemsSource="{Binding DLCsView}" Margin="5,26,5,0" PreviewMouseDown="DLCsListBox_PreviewMouseDown"/>
                        </Grid>

                        <DockPanel Grid.Column="1">
                            <Label Content="Selected DLC Files"/>
                            <TextBox Text="{Binding FTSFilesSearch, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}" Template="{StaticResource SearchBoxTemplate}" Tag="Search..."/>
                            <ListBox x:Name="FilesListBox" ItemsSource="{Binding ElementName=DLCsListBox, Path=SelectedItem.Files}">
                                <ListBox.Style>
                                    <Style TargetType="ListBox" BasedOn="{StaticResource {x:Type ListBox}}">
                                        <Setter Property="ItemTemplate" Value="{StaticResource ExcludedListTemplate}"/>
                                    </Style>
                                </ListBox.Style>
                            </ListBox>
                            <ListBox x:Name="ExcludedFilesListBox" ItemsSource="{Binding ElementName=ExclusionsListBox, Path=SelectedItem.Files}">
                                <ListBox.Style>
                                    <Style TargetType="ListBox" BasedOn="{StaticResource {x:Type ListBox}}">
                                        <Setter Property="ItemTemplate" Value="{StaticResource ExcludedListTemplate}"/>
                                    </Style>
                                </ListBox.Style>
                            </ListBox>
                        </DockPanel>

                        <DockPanel Grid.Column="2">
                            <Label Content="Excluded from Tree Scan"/>
                            <ListBox x:Name="ExclusionsListBox" ItemsSource="{Binding ExclusionsView}" Background="Pink" Margin="5,0" PreviewMouseDown="ExclusionsListBox_PreviewMouseDown"/>
                        </DockPanel>
                    </Grid>
                </DockPanel>

                <StackPanel x:Name="TreeInfoPanel" Grid.Column="1" Grid.Row="1" Margin="1,0.333,0,0.333">
                    <StackPanel DockPanel.Dock="Right">
                        <Label Content="Tree Valid?" FontWeight="Bold" FontSize="30" HorizontalAlignment="Center"/>
                        <TextBlock HorizontalAlignment="Center" FontSize="50" FontWeight="Bold">
                            <TextBlock.Style>
                                <Style TargetType="TextBlock">
                                    <Setter Property="Text" Value="YES"/>
                                    <Setter Property="Foreground" Value="Green"/>

                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding CurrentTree.Valid}" Value="false">
                                            <Setter Property="Text" Value="NO"/>
                                            <Setter Property="Foreground" Value="Red"/>
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </TextBlock.Style>
                        </TextBlock>
                    </StackPanel>


                    <TextBlock HorizontalAlignment="Center" Visibility="{Binding CurrentTree.Valid, Converter={StaticResource BoolToVisConverter}}" Margin="0,0,0,40">
                        <Run Text="Tree Version:" FontSize="20" FontWeight="Bold"/>
                        <Run Text="{Binding CurrentTree.TreeVersion}" FontWeight="Bold"/>
                    </TextBlock>
                    <StackPanel>
                        <StackPanel.Resources>
                            <Style TargetType="Button">
                                <Setter Property="Background" Value="Transparent"/>
                                <Setter Property="Margin" Value="0,2,0,2"/>
                            </Style>
                            <Style TargetType="Image">
                                <Setter Property="Height" Value="70"/>
                                <Setter Property="VerticalAlignment" Value="Top"/>
                            </Style>

                            <Style TargetType="Label">
                                <Setter Property="Margin" Value="0,70,0,0"/>
                                <Setter Property="HorizontalAlignment" Value="Center"/>
                                <Setter Property="FontSize" Value="20"/>
                                <Setter Property="FontWeight" Value="Bold"/>
                            </Style>
                        </StackPanel.Resources>
                        <Button x:Name="ImportTreeButton" Click="ImportTreeButton_Click">
                            <Grid>
                                <Image Source="/WPF_ME3Explorer;component/Resources/Import Tree.png"/>
                                <Label Content="Import/Restore Tree"/>
                            </Grid>
                        </Button>
                        <Button x:Name="ExportTreeButton" Click="ExportTreeButton_Click" IsEnabled="{Binding CurrentTree.Valid}">
                            <Grid>
                                <Image Source="/WPF_ME3Explorer;component/Resources/Export Tree.png"/>
                                <Label Content="Backup Tree and Thumbs"/>
                            </Grid>
                        </Button>

                        <Grid IsEnabled="{Binding CurrentTree.Exists}">
                            <StackPanel x:Name="ReallyDeleteStacker" IsHitTestVisible="False" Background="Transparent">
                                <StackPanel.Triggers>
                                    <EventTrigger RoutedEvent="StackPanel.MouseLeave">
                                        <BeginStoryboard>
                                            <Storyboard>
                                                <DoubleAnimation Storyboard.TargetName="DeleteTreeButton" Storyboard.TargetProperty="Opacity" From="0" To="1" Duration="0:0:0.3">
                                                    <DoubleAnimation.EasingFunction>
                                                        <CubicEase EasingMode="EaseOut"/>
                                                    </DoubleAnimation.EasingFunction>
                                                </DoubleAnimation>

                                                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="DeleteTreeButton" Storyboard.TargetProperty="Visibility">
                                                    <DiscreteObjectKeyFrame KeyTime="0:0:0" Value="{x:Static Visibility.Visible}"/>
                                                </ObjectAnimationUsingKeyFrames>

                                                <BooleanAnimationUsingKeyFrames Storyboard.TargetName="ReallyDeleteStacker" Storyboard.TargetProperty="IsHitTestVisible">
                                                    <DiscreteBooleanKeyFrame KeyTime="0:0:0.1" Value="false"/>
                                                </BooleanAnimationUsingKeyFrames>
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </EventTrigger>
                                </StackPanel.Triggers>
                                <TextBlock Text="Are you really sure you want to delete the current tree?" TextWrapping="Wrap" FontSize="20" TextAlignment="Center" FontWeight="Bold" Foreground="Red" Margin="0,0,0,30"/>
                                <Button x:Name="ReallyDeleteTreeButton" Content="YES" FontSize="14" FontWeight="Bold" Click="ReallyDeleteTreeButton_Click" Background="Red" Foreground="White" HorizontalAlignment="Center" Padding="8,3">
                                    <Button.Triggers>
                                        <EventTrigger RoutedEvent="ButtonBase.Click">
                                            <BeginStoryboard>
                                                <Storyboard>
                                                    <DoubleAnimation Storyboard.TargetName="DeleteTreeButton" Storyboard.TargetProperty="Opacity" From="0" To="1" Duration="0:0:0.3">
                                                        <DoubleAnimation.EasingFunction>
                                                            <CubicEase EasingMode="EaseOut"/>
                                                        </DoubleAnimation.EasingFunction>
                                                    </DoubleAnimation>

                                                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="DeleteTreeButton" Storyboard.TargetProperty="Visibility">
                                                        <DiscreteObjectKeyFrame KeyTime="0:0:0" Value="{x:Static Visibility.Visible}"/>
                                                    </ObjectAnimationUsingKeyFrames>

                                                    <BooleanAnimationUsingKeyFrames Storyboard.TargetName="ReallyDeleteStacker" Storyboard.TargetProperty="IsHitTestVisible">
                                                        <DiscreteBooleanKeyFrame KeyTime="0:0:0.1" Value="false"/>
                                                    </BooleanAnimationUsingKeyFrames>
                                                </Storyboard>
                                            </BeginStoryboard>
                                        </EventTrigger>
                                    </Button.Triggers>
                                </Button>
                            </StackPanel>
                            <Button x:Name="DeleteTreeButton" Background="White">
                                <Button.Triggers>
                                    <EventTrigger RoutedEvent="ButtonBase.Click">
                                        <BeginStoryboard>
                                            <Storyboard>
                                                <DoubleAnimation Storyboard.TargetName="DeleteTreeButton" Storyboard.TargetProperty="Opacity" From="1" To="0" Duration="0:0:0.3">
                                                    <DoubleAnimation.EasingFunction>
                                                        <CubicEase EasingMode="EaseOut"/>
                                                    </DoubleAnimation.EasingFunction>
                                                </DoubleAnimation>

                                                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="DeleteTreeButton" Storyboard.TargetProperty="Visibility">
                                                    <DiscreteObjectKeyFrame KeyTime="0:0:0.3" Value="{x:Static Visibility.Collapsed}"/>
                                                </ObjectAnimationUsingKeyFrames>

                                                <BooleanAnimationUsingKeyFrames Storyboard.TargetName="ReallyDeleteStacker" Storyboard.TargetProperty="IsHitTestVisible">
                                                    <DiscreteBooleanKeyFrame KeyTime="0:0:0.3" Value="true"/>
                                                </BooleanAnimationUsingKeyFrames>
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </EventTrigger>
                                </Button.Triggers>
                                <Grid>
                                    <Image Source="/WPF_ME3Explorer;component/Resources/Delete Tree.png"/>
                                    <Label Content="Remove Current Tree"/>
                                </Grid>
                            </Button>
                        </Grid>



                        <Button x:Name="ExportCSVButton" Click="ExportCSVButton_Click" IsEnabled="{Binding CurrentTree.Valid}">
                            <Grid>
                                <Image Source="/WPF_ME3Explorer;component/Resources/Export CSV.png"/>
                                <Label Content="Export Tree to CSV"/>
                            </Grid>
                        </Button>
                    </StackPanel>
                </StackPanel>

                <DockPanel Grid.Column="2" Grid.Row="1" VerticalAlignment="Bottom" Margin="5" LastChildFill="False" HorizontalAlignment="Center">
                    <Label Content="Number of threads:   " FontWeight="Bold" FontSize="17"/>
                    <TextBox Width="40" TextAlignment="Center" Text="{Binding NumThreads}" VerticalContentAlignment="Center" HorizontalContentAlignment="Center" BorderThickness="0.5" FontSize="17" VerticalAlignment="Center" Padding="0,2"/>
                </DockPanel>
                

                <Label Content="Please wait..." Grid.ColumnSpan="2" Grid.RowSpan="2" Background="#B2808080" Foreground="White" FontSize="200" VerticalContentAlignment="Center" 
                       HorizontalContentAlignment="Center" Visibility="{Binding FTSReady, Converter={StaticResource BoolToVisConverter}, ConverterParameter={StaticResource True}}" d:IsHidden="True"/>
            </Grid>
        </Grid>

        <Grid x:Name="ProgressPanel" Background="#CC000000" Visibility="Collapsed" Grid.RowSpan="3" Grid.ColumnSpan="4" Margin="0,0,0,0.333">
            <Grid.Resources>
                <Style TargetType="TextBlock">
                    <Setter Property="Foreground" Value="White"/>
                    <Setter Property="FontSize" Value="50"/>
                </Style>

                <Style BasedOn="{StaticResource MainButtonStyle}" TargetType="Button">
                    <Setter Property="FontSize" Value="30"/>
                    <Setter Property="Background" Value="Transparent"/>
                    <Setter Property="BorderBrush" Value="White"/>
                    <Setter Property="Foreground" Value="White"/>
                    <Setter Property="Padding" Value="10,4"/>
                </Style>
            </Grid.Resources>
            <Grid.RowDefinitions>
                <RowDefinition Height="174*"/>
                <RowDefinition Height="542*"/>
                <RowDefinition Height="120*"/>
            </Grid.RowDefinitions>

            <MediaElement x:Name="BackgroundMovie" Grid.RowSpan="3" Stretch="Fill" Margin="0,0,0,0.333" UnloadedBehavior="Manual" LoadedBehavior="Manual" MediaEnded="BackgroundMovie_MediaEnded" MediaOpened="BackgroundMovie_MediaOpened" MediaFailed="BackgroundMovie_MediaFailed"/>
            <Button x:Name="HiderButton" Content="Close" HorizontalAlignment="Left" VerticalAlignment="Top">
                <Button.Resources>
                    <Storyboard x:Key="ProgressPanelCloser">
                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ProgressPanel" Storyboard.TargetProperty="Visibility">
                            <DiscreteObjectKeyFrame KeyTime="0:0:1" Value="{x:Static Visibility.Collapsed}"/>
                        </ObjectAnimationUsingKeyFrames>

                        <BooleanAnimationUsingKeyFrames Storyboard.TargetName="ProgressPanel" Storyboard.TargetProperty="IsHitTestVisible">
                            <DiscreteBooleanKeyFrame KeyTime="0:0:0.8" Value="false"/>
                        </BooleanAnimationUsingKeyFrames>

                        <DoubleAnimation Storyboard.TargetName="ProgressPanel" Storyboard.TargetProperty="Opacity" From="1" To="0" Duration="0:0:1" DecelerationRatio="1">
                            <DoubleAnimation.EasingFunction>
                                <CubicEase EasingMode="EaseOut"/>
                            </DoubleAnimation.EasingFunction>
                        </DoubleAnimation>
                    </Storyboard>
                </Button.Resources>
                <Button.Triggers>
                    <EventTrigger RoutedEvent="Button.Click">
                        <BeginStoryboard Storyboard="{StaticResource ProgressPanelCloser}"/>
                    </EventTrigger>
                </Button.Triggers>
            </Button>


            <DockPanel x:Name="ResourceMonitorPanel" Grid.Row="2" LastChildFill="False">
                <DockPanel.Resources>
                    <Style BasedOn="{StaticResource {x:Type TextBlock}}" TargetType="TextBlock">
                        <Setter Property="Margin" Value="25,0"/>
                        <Setter Property="FontSize" Value="45"/>
                        <Setter Property="TextAlignment" Value="Center"/>
                    </Style>
                </DockPanel.Resources>

                <TextBlock x:Name="CPUUsage">
                    <Run Text="CPU Usage" FontWeight="Bold"/>
                    <LineBreak/>
                    <Run Text="{Binding CPUUsage}"/>
                </TextBlock>

                <TextBlock x:Name="DiskActivity">
                    <Run Text="Disk Activity" FontWeight="Bold"/>
                    <LineBreak/>
                    <Run Text="{Binding DiskActivity}"/>
                </TextBlock>

                <TextBlock x:Name="DiskUsage">
                    <Run Text="Disk Usage" FontWeight="Bold"/>
                    <LineBreak/>
                    <Run Text="{Binding DiskUsage}"/>
                </TextBlock>

                <TextBlock x:Name="ElapsedTime">
                    <Run Text="Elapsed Time" FontWeight="Bold"/>
                    <LineBreak/>
                    <Run Text="{Binding ElapsedTime, StringFormat=hh\\:mm\\:ss}"/>
                </TextBlock>

                <TextBlock x:Name="MemoryUsage" DockPanel.Dock="Right">
                    <Run Text="Memory Usage" FontWeight="Bold"/>
                    <LineBreak/>
                    <Run Text="{Binding MemoryUsage}"/>
                </TextBlock>
            </DockPanel>

            <ProgressBar x:Name="ProgressBar" Margin="100,11,120,10" Style="{StaticResource ProgressBarStyle}" Foreground="#B206B025" Background="#B2E6E6E6"/>
            <Control Template="{StaticResource CancelButtonTemplate}" VerticalAlignment="Top" HorizontalAlignment="Right" Background="Transparent" Grid.Row="1"/>
            <Border x:Name="StatusBorder" HorizontalAlignment="Center">
                <TextBlock Text="{Binding Status}" VerticalAlignment="Center"/>
            </Border>
            <Button x:Name="ErrorsShowButton" Content="Errors" Grid.Row="1" HorizontalAlignment="Center" VerticalAlignment="Top" FontSize="50" Padding="20,3">
                <Button.Style>
                    <Style TargetType="Button" BasedOn="{StaticResource {x:Type Button}}">
                        <Setter Property="Visibility" Value="Visible"/>

                        <Style.Triggers>
                            <DataTrigger Binding="{Binding Errors.Count}" Value="0">
                                <Setter Property="Visibility" Value="Collapsed"/>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </Button.Style>
            </Button>
            <ListBox Grid.Row="1" Margin="0,82,0,0" Background="#B2FFFFFF">
                <ListBox.Style>
                    <Style TargetType="ListBox">
                        <Setter Property="Visibility" Value="Visible"/>

                        <Style.Triggers>
                            <DataTrigger Binding="{Binding Errors.Count}" Value="0">
                                <Setter Property="Visibility" Value="Collapsed"/>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </ListBox.Style>
            </ListBox>
        </Grid>

        <Border x:Name="ExtractionPanel" Tag="{Binding ShowExtractionPanel}" Style="{StaticResource FadedBackgroundBorder}">
            <Border Style="{StaticResource FadedInnerBorder}">
                <StackPanel>
                    <StackPanel.Resources>
                        <Style TargetType="DockPanel">
                            <Setter Property="Margin" Value="3,3"/>
                        </Style>

                        <Style TargetType="TextBox">
                            <Setter Property="VerticalContentAlignment" Value="Center"/>
                            <Setter Property="Margin" Value="5,0"/>
                        </Style>

                        <Style TargetType="Label">
                            <Setter Property="FontWeight" Value="Bold"/>
                        </Style>
                    </StackPanel.Resources>
                    <Label Content="Texture Extraction" FontSize="30" FontWeight="Bold" HorizontalAlignment="Center"/>

                    <DockPanel>
                        <Label Content="Extract Path: " DockPanel.Dock="Left"/>
                        <Button x:Name="Extract_BrowseButton" Content="Browse" DockPanel.Dock="Right" Click="Extract_BrowseButton_Click" Padding="8,5"/>
                        <TextBox Text="{Binding Extract_SavePath}" VerticalContentAlignment="Center" Margin="10,0" Padding="5,2"/>
                    </DockPanel>

                    <DockPanel LastChildFill="False" Visibility="{Binding Extract_IsFolder, Converter={StaticResource BoolToVisConverter}, ConverterParameter={StaticResource True}}">
                        <Label Content="Extract Format: "/>
                        <ComboBox VerticalContentAlignment="Center" ItemsSource="{usefulUIElements:EnumToItemsSource {x:Type ImgLib:ImageEngineFormat}}" DisplayMemberPath="DisplayName" SelectedValue="{Binding Extract_SaveFormat, Mode=TwoWay}" SelectedValuePath="Value" IsSynchronizedWithCurrentItem="True"/>
                    </DockPanel>

                    <CheckBox IsChecked="{Binding Extract_BuildMips}" VerticalAlignment="Center" Content="Build Mipmaps?" Margin="0,5" Visibility="{Binding Extract_IsFolder, Converter={StaticResource BoolToVisConverter}, ConverterParameter={StaticResource True}}"/>

                    <DockPanel LastChildFill="False">
                        <Button Content="Extract!" Style="{StaticResource MainButtonStyle}" Padding="8,5" x:Name="Extract_ExtractButton" Command="{Binding Extract_ExtractCommand}" HorizontalAlignment="Center"/>
                        <Button x:Name="ExtractPanelCloseButton" Content="Close" Style="{StaticResource MainButtonStyle}" Padding="8,5" DockPanel.Dock="Right" Click="ExtractPanelCloseButton_Click"/>
                    </DockPanel>
                </StackPanel>
            </Border>
        </Border>

        <Border x:Name="ChangePanel" Tag="{Binding ShowChangePanel}" Style="{StaticResource FadedBackgroundBorder}">
            <Border Style="{StaticResource FadedInnerBorder}">
                <StackPanel>
                    <StackPanel.Resources>
                        <Style TargetType="TextBlock" x:Key="MainBlocks">
                            <Setter Property="Margin" Value="2,2"/>
                        </Style>

                        <Style TargetType="DockPanel">
                            <Setter Property="Margin" Value="3,3"/>
                        </Style>
                    </StackPanel.Resources>
                    <Label Content="Change Texture" FontSize="30" FontWeight="Bold"/>

                    <DockPanel>
                        <Label Content="Replacing Path: " DockPanel.Dock="Left"/>
                        <Button x:Name="Change_BrowseButton" Content="Browse" DockPanel.Dock="Right" Click="Change_BrowseButton_Click"/>
                        <TextBox Text="{Binding Change_SavePath}" VerticalContentAlignment="Center" Margin="10,0"/>
                    </DockPanel>

                    <CheckBox x:Name="Change_BackgroundToggle" Content="White Preview Backgrounds" VerticalContentAlignment="Center" Margin="6,5,6,2"/>
                    <CheckBox x:Name="Change_AlphaToggle" Content="Display Composite (incl Alpha Channel)" VerticalContentAlignment="Center" Margin="6,2,5,6" IsChecked="{Binding Change_DisplayAlpha, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>

                    <Grid Margin="0,0,0,5">
                        <Grid.Style>
                            <Style TargetType="Grid">
                                <Setter Property="Background" Value="Black"/>

                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding ElementName=Change_BackgroundToggle, Path=IsChecked}" Value="true">
                                        <Setter Property="Background" Value="White"/>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </Grid.Style>
                        <Grid.Resources>
                            <Style TargetType="Image">
                                <Setter Property="MaxWidth" Value="512"/>
                                <Setter Property="MaxHeight" Value="512"/>
                            </Style>
                        </Grid.Resources>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="2*"/>
                            <ColumnDefinition Width="2*"/>
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="10*"/>
                            <RowDefinition Height="*"/>
                        </Grid.RowDefinitions>
                        <Image Source="{Binding Change_OrigPreview}"/>
                        <Image Grid.Column="1" Source="{Binding Change_ConvPreview}"/>

                        <Label Background="White" Content="Preview" HorizontalContentAlignment="Center" Grid.Row="1"/>
                        <Label Background="White" Content="Auto-Converted Preview" HorizontalContentAlignment="Center" Grid.Row="1" Grid.Column="1"/>
                    </Grid>

                    <StackPanel>
                        <Label Content="DXT1 - Alpha Blending" FontSize="12" FontWeight="Bold"/>
                        <StackPanel Orientation="Horizontal">
                            <StackPanel.Resources>
                                <Style TargetType="CheckBox">
                                    <Setter Property="Margin" Value="0,0,15,0"/>
                                </Style>
                            </StackPanel.Resources>
                            <CheckBox Content="Remove" IsChecked="{Binding Change_RemoveAlpha}"/>
                            <CheckBox Content="Flatten" IsChecked="{Binding Change_FlattenAlpha}"/>
                        </StackPanel>
                        <Label Content="Alpha Threshold" FontStyle="Italic"/>
                        <Slider Minimum="0" Maximum="100" Value="{Binding Change_AlphaThreshold, Mode=TwoWay}" IsEnabled="{Binding Change_FlattenAlpha}"/>
                    </StackPanel>

                    <TextBlock Style="{StaticResource MainBlocks}">
                        <Run>
                            Tree Texture Format: 
                        </Run>
                        <Run Text="{Binding Change_TreeFormat, Converter={StaticResource ImageEngineFormatConverter}}"/>
                    </TextBlock>

                    <TextBlock Style="{StaticResource MainBlocks}">
                        <Run>
                            Replacing Texture Format: 
                        </Run>
                        <Run Text="{Binding Change_ReplacingFormat, Converter={StaticResource ImageEngineFormatConverter}}"/>
                    </TextBlock>

                    <Button Content="Change Texture!" Style="{StaticResource MainButtonStyle}" Padding="0,5" x:Name="Change_ChangeButton" Command="{Binding Change_ChangeCommand}" Margin="0,10,0,0"/>
                </StackPanel>
            </Border>
        </Border>
    </Grid>
</Window>
