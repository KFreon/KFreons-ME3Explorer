<Window
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:WPF_ME3Explorer.UI"
        xmlns:VM="clr-namespace:WPF_ME3Explorer.UI.ViewModels"
        x:Class="WPF_ME3Explorer.UI.TPFTools"
        mc:Ignorable="d"
        Title="TPFTools" Height="882.469" Width="1507.27" Closing="Window_Closing" KeyDown="Window_KeyDown">

    <Window.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="UIResources.xaml"/>
            </ResourceDictionary.MergedDictionaries>
        </ResourceDictionary>
    </Window.Resources>

    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="25"/>
            <RowDefinition Height="391*"/>
            <RowDefinition Height="304*"/>
            <RowDefinition Height="60*"/>
            <RowDefinition Height="30"/>
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="989*"/>
            <ColumnDefinition Width="512*"/>
        </Grid.ColumnDefinitions>

        <Menu Grid.ColumnSpan="2" Margin="0,0,511.667,0.333" Background="White">
            <MenuItem x:Name="LoadMenuItem" Header="Load" Style="{StaticResource BaseMenuItemStyle}" Click="LoadMenuItem_Click"/>
            <MenuItem x:Name="ClearAllMenuItem" Header="Clear" Command="{Binding ClearAllCommand}">
                <MenuItem.Style>
                    <Style TargetType="MenuItem" BasedOn="{StaticResource BaseMenuItemStyle}">
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding Textures.Count}" Value="0">
                                <Setter Property="IsEnabled" Value="False"/>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </MenuItem.Style>
            </MenuItem>
            <MenuItem x:Name="SaveToTPFButton" Header="Save to TPF" Style="{StaticResource BaseMenuItemStyle}" IsEnabled="{Binding SaveTPFEnabled}" Command="{Binding SaveToTPFCommand}"/>
            <MenuItem x:Name="BulkExtractButton" Header="Bulk Extract TPFs" Style="{StaticResource BaseMenuItemStyle}" Click="BulkExtractButton_Click"/>
        </Menu>

        <StackPanel Grid.Column="1" HorizontalAlignment="Right" VerticalAlignment="Top" Orientation="Horizontal" Margin="0,0,-0.333,0">
            <ContentControl Template="{StaticResource GameIndicators}"/>
            <ContentControl Template="{StaticResource TreeIndicators}" />
        </StackPanel>

        <StatusBar Template="{StaticResource StatusBarTemplate}" VerticalAlignment="Bottom" Grid.ColumnSpan="2" Grid.Row="4" Margin="0,0,-0.333,0.334"/>

        <DockPanel Grid.Row="1" Grid.RowSpan="2">
            <DockPanel DockPanel.Dock="Top">
                <CheckBox IsThreeState="True" Margin="2,6,10,0" IsChecked="{Binding TexturesCheckAll}"/>
                <TextBox x:Name="SearchBox" Height="22" BorderBrush="{x:Null}" Tag="Search..." DockPanel.Dock="Right" Template="{StaticResource SearchBoxTemplate}"
                     Text="{Binding TextureSearch, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
            </DockPanel>

            <ListBox x:Name="MainView" ItemsSource="{Binding MainDisplayView}" SelectedItem="{Binding SelectedTexture, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Drop="MainView_Drop" 
                     AllowDrop="True" DragEnter="MainView_DragEnter" DragOver="MainView_DragOver" DragLeave="MainView_DragLeave" HorizontalContentAlignment="Stretch">
                <ListBox.ItemTemplate>
                    <DataTemplate>
                        <DockPanel x:Name="MainViewItem" MouseMove="MainViewItem_MouseMove" LastChildFill="False">
                            <DockPanel.Style>
                                <Style TargetType="DockPanel">
                                    <Setter Property="Background" Value="Transparent"/>

                                    <Style.Triggers>
                                        <MultiDataTrigger>
                                            <MultiDataTrigger.Conditions>
                                                <Condition Binding="{Binding Analysed}" Value="true"/>
                                                <Condition Binding="{Binding FoundInTree}" Value="false"/>
                                            </MultiDataTrigger.Conditions>

                                            <MultiDataTrigger.Setters>
                                                <Setter Property="Background" Value="Pink"/>
                                            </MultiDataTrigger.Setters>
                                        </MultiDataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </DockPanel.Style>
                            <DockPanel.ContextMenu>
                                <ContextMenu>
                                    <MenuItem Header="Install" Command="{Binding InstallCommand}" CommandParameter="{Binding}">
                                        <MenuItem.Icon>
                                            <Image Source="/WPF_ME3Explorer;component/Resources/ChangeTexture.png"/>
                                        </MenuItem.Icon>
                                    </MenuItem>
                                    <MenuItem Header="Replace" Command="{Binding ReplaceCommand}" CommandParameter="{Binding}">
                                        <MenuItem.Icon>
                                            <Image Source="/WPF_ME3Explorer;component/Resources/RegenerateSingle.png"/>
                                        </MenuItem.Icon>
                                    </MenuItem>
                                    <MenuItem Header="Extract" Command="{Binding ExtractCommand}" CommandParameter="{Binding}">
                                        <MenuItem.Icon>
                                            <Image Source="/WPF_ME3Explorer;component/Resources/ExtractTexture.png"/>
                                        </MenuItem.Icon>
                                    </MenuItem>
                                </ContextMenu>
                            </DockPanel.ContextMenu>
                            <CheckBox IsChecked="{Binding IsChecked, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" VerticalAlignment="Center" Margin="0,0,3,0" Visibility="{Binding IsDef, Converter={StaticResource BoolToVisConverter}, ConverterParameter={StaticResource True}}"/>
                            <Image x:Name="ItemThumb" Width="64" Height="64">
                                <Image.Style>
                                    <Style TargetType="Image">
                                        <Setter Property="Source" Value="{Binding Thumb, Converter={StaticResource ThumbnailConverter}, ConverterParameter={StaticResource DefaultTexture}}"/>

                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding IsDef}" Value="true">
                                                <Setter Property="Source" Value="{StaticResource DefaultText}"/>
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </Image.Style>
                            </Image>
                            <StackPanel x:Name="Name_Error" Margin="5" VerticalAlignment="Center">
                                <TextBlock x:Name="NameDisplay" Text="{Binding Name, Mode=OneWay}"/>
                                <TextBlock x:Name="FilenameDisplay" Foreground="Gray">
                                    <TextBlock.Style>
                                        <Style TargetType="TextBlock">
                                            <Setter Property="Visibility" Value="Collapsed"/>

                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding FoundInTree}" Value="true">
                                                    <Setter Property="Visibility" Value="Visible"/>
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </TextBlock.Style>
                                <Run Text="Filename: " FontWeight="Bold"/>
                                <Run Text="{Binding FileName, Mode=OneWay}"/>
                                </TextBlock>
                                <TextBlock x:Name="ErrorDisplay" Text="{Binding Error, Mode=OneWay}" FontSize="20" Foreground="Red">
                                    <TextBlock.Style>
                                        <Style TargetType="TextBlock">
                                            <Setter Property="Visibility" Value="Visible"/>

                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding Error}" Value="{x:Null}">
                                                    <Setter Property="Visibility" Value="Collapsed"/>
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </TextBlock.Style>
                                </TextBlock>
                                <TextBlock Text="Automatic format/mip conversion will be performed." Foreground="#FFFF9191">
                                    <TextBlock.Style>
                                        <Style TargetType="TextBlock">
                                            <Setter Property="Visibility" Value="Collapsed"/>

                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding RequiresAutofix}" Value="true">
                                                    <Setter Property="Visibility" Value="Visible"/>
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </TextBlock.Style>
                                </TextBlock>
                            </StackPanel>
                            <Grid x:Name="TexDetailsPanel" DockPanel.Dock="Right">
                                <Grid.Resources>
                                    <Style TargetType="Label">
                                        <Setter Property="Foreground" Value="Gray"/>
                                        <Setter Property="VerticalContentAlignment" Value="Center"/>
                                        <Setter Property="FontWeight" Value="Bold"/>
                                        <Setter Property="Margin" Value="2,0"/>
                                        <Setter Property="Opacity" Value=".6"/>
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding IsDef}" Value="true">
                                                <Setter Property="Visibility" Value="Collapsed"/>
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>

                                    <Style TargetType="TextBlock">
                                        <Setter Property="Foreground" Value="Gray"/>
                                        <Setter Property="VerticalAlignment" Value="Center"/>
                                        <Setter Property="Margin" Value="2,0,8,0"/>
                                        <Setter Property="Opacity" Value=".6"/>
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding IsDef}" Value="true">
                                                <Setter Property="Visibility" Value="Collapsed"/>
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>

                                    <Style TargetType="Label" BasedOn="{StaticResource {x:Type Label}}" x:Key="TreeDependentLabel">
                                        <Setter Property="Visibility" Value="{Binding Analysed, Converter={StaticResource BoolToVisConverter}}"/>
                                    </Style>

                                    <Style TargetType="TextBlock" BasedOn="{StaticResource {x:Type TextBlock}}" x:Key="TreeDependentTextBlock">
                                        <Setter Property="Visibility" Value="{Binding Analysed, Converter={StaticResource BoolToVisConverter}}"/>
                                    </Style>

                                    <Style TargetType="Label" BasedOn="{StaticResource TreeDependentLabel}" x:Key="TreeDependentFormat">
                                        <Setter Property="Foreground" Value="Green"/>
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding FormatOK}" Value="false">
                                                <Setter Property="Foreground" Value="Red"/>
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>

                                    <Style TargetType="Label" BasedOn="{StaticResource TreeDependentLabel}" x:Key="TreeDependentMips">
                                        <Setter Property="Foreground" Value="Green"/>
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding MipsOK}" Value="false">
                                                <Setter Property="Foreground" Value="Red"/>
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>

                                    <Style TargetType="TextBlock" BasedOn="{StaticResource TreeDependentTextBlock}" x:Key="TreeDependentFormatText">
                                        <Setter Property="Foreground" Value="Green"/>
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding FormatOK}" Value="false">
                                                <Setter Property="Foreground" Value="Red"/>
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>

                                    <Style TargetType="TextBlock" BasedOn="{StaticResource TreeDependentTextBlock}" x:Key="TreeDependentMipsText">
                                        <Setter Property="Foreground" Value="Green"/>
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding MipsOK}" Value="false">
                                                <Setter Property="Foreground" Value="Red"/>
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </Grid.Resources>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="20*"/>
                                    <ColumnDefinition Width="20*"/>
                                    <ColumnDefinition Width="20*"/>
                                    <ColumnDefinition Width="20*"/>
                                    <ColumnDefinition Width="20*"/>
                                    <ColumnDefinition Width="20*"/>
                                    <ColumnDefinition Width="20*"/>
                                    <ColumnDefinition Width="20*"/>
                                    <ColumnDefinition Width="20*"/>
                                </Grid.ColumnDefinitions>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="20*"/>
                                    <RowDefinition Height="20*"/>
                                </Grid.RowDefinitions>

                                <Label Content="Width:"/>
                                <TextBlock Text="{Binding Width}" Grid.Column="1"/>

                                <Label Content="Height:" Grid.Row="1"/>
                                <TextBlock Text="{Binding Height}" Grid.Column="1" Grid.Row="1"/>

                                <Label Content="Hash:" Grid.Column="2"/>
                                <TextBox Text="{Binding Hash, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, Converter={StaticResource HashStringConverter}}" Opacity=".6" 
                                         Grid.Column="3" Margin="0,0,7,0" VerticalContentAlignment="Center" VerticalAlignment="Center" Padding="7,3" 
                                         Visibility="{Binding IsDef, Converter={StaticResource BoolToVisConverter}, ConverterParameter={StaticResource True}}"
                                         MouseMove="TextBox_MouseMove"/>
                                <Button Content="Reset Hash" Grid.Column="2" Grid.Row="1" VerticalAlignment="Center" HorizontalAlignment="Center" Opacity=".6" Padding="6,2" Grid.ColumnSpan="2" Style="{StaticResource MainButtonStyle}" Visibility="{Binding HashChanged, Converter={StaticResource BoolToVisConverter}}"/>

                                <Label Content="Format:" Grid.Column="4"/>
                                <TextBlock Text="{Binding Format, Converter={StaticResource ImageEngineFormatConverter}}" Grid.Column="5"/>

                                <Label Content="Tree Format:" Grid.Column="6" Style="{StaticResource TreeDependentFormat}"/>
                                <TextBlock Text="{Binding TreeFormat, Converter={StaticResource ImageEngineFormatConverter}}" Grid.Column="7" Style="{StaticResource TreeDependentFormatText}"/>

                                <Label Content="Mips:" Grid.Column="4" Grid.Row="1"/>
                                <TextBlock Text="{Binding Mips}" Grid.Column="5" Grid.Row="1"/>

                                <Label Content="Tree Mips:" Grid.Column="6" Grid.Row="1" Style="{StaticResource TreeDependentMips}"/>
                                <TextBlock Text="{Binding TreeMips}" Grid.Column="7" Grid.Row="1" Style="{StaticResource TreeDependentMipsText}"/>
                            </Grid>
                        </DockPanel>
                    </DataTemplate>
                </ListBox.ItemTemplate>
            </ListBox>
        </DockPanel>
        <StackPanel Grid.Column="1" Grid.Row="1">
            <Image x:Name="PreviewImage" Source="{Binding ElementName=MainView, Path=SelectedItem.Preview, IsAsync=True}" Visibility="{Binding ElementName=MainView, Path=SelectedItem.IsDef, Converter={StaticResource BoolToVisConverter}, ConverterParameter={StaticResource True}}"/>
            <TextBox x:Name="PreviewText" Text="{Binding ElementName=MainView, Path=SelectedItem.DefPreview, Mode=OneWay}" Visibility="{Binding ElementName=MainView, Path=SelectedItem.IsDef, Converter={StaticResource BoolToVisConverter}}"/>
        </StackPanel>
        <TabControl Grid.Column="1" Grid.Row="2" Margin="0.333,0.333,-0.333,0.334" Grid.RowSpan="2">
            <TabControl.Resources>
                <Style TargetType="FrameworkElement" x:Key="TPFPanelVisibilityStyle">
                    <Setter Property="Visibility" Value="Collapsed"/>

                    <Style.Triggers>
                        <DataTrigger Binding="{Binding ElementName=MainView, Path=SelectedItem.IsFromTPF}" Value="true">
                            <Setter Property="Visibility" Value="Visible"/>
                        </DataTrigger>
                    </Style.Triggers>
                </Style>

                <Style TargetType="FrameworkElement" x:Key="PCCsPanelVisibilityStyle">
                    <Setter Property="Visibility" Value="Collapsed"/>

                    <Style.Triggers>
                        <DataTrigger Binding="{Binding ElementName=MainView, Path=SelectedItem.Analysed}" Value="true">
                            <Setter Property="Visibility" Value="Visible"/>
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </TabControl.Resources>
            <TabItem Header="TPF Info" Style="{StaticResource TPFPanelVisibilityStyle}">
                <DockPanel Style="{StaticResource TPFPanelVisibilityStyle}">
                    <TextBlock DockPanel.Dock="Top" Margin="5" TextWrapping="Wrap">
                        <Run Text="Filename" FontWeight="Bold"/>
                        <LineBreak/>
                        <Run Text="{Binding ElementName=MainView, Path=SelectedItem.TPF_FileName, Mode=OneWay}"/>
                    </TextBlock>

                    <TextBlock DockPanel.Dock="Top" Margin="5">
                        <Run Text="Number of files: " FontWeight="Bold"/>
                        <Run Text="{Binding ElementName=MainView, Path=SelectedItem.TPF_EntryCount, Mode=OneWay}"/>
                    </TextBlock>

                    <TextBlock DockPanel.Dock="Top" Margin="5">
                        <Run Text="Author: " FontWeight="Bold"/>
                        <Run Text="{Binding ElementName=MainView, Path=SelectedItem.TPF_Author, Mode=OneWay}"/>
                    </TextBlock>

                    <TextBlock DockPanel.Dock="Top" Margin="5" TextWrapping="Wrap">
                        <Run Text="Comment" FontWeight="Bold"/>
                        <LineBreak/>
                        <Run Text="{Binding ElementName=MainView, Path=SelectedItem.TPF_Comment, Mode=OneWay}"/>
                    </TextBlock>
                </DockPanel>
            </TabItem>
            <TabItem Header="PCCs" Style="{StaticResource PCCsPanelVisibilityStyle}">
                <Grid Style="{StaticResource PCCsPanelVisibilityStyle}">
                    <CheckBox x:Name="PCCsCheckAllChecker" IsChecked="{Binding PCCsCheckAll}" Style="{StaticResource CheckAllCheckBoxStyle}" HorizontalAlignment="Left" Grid.Row="1" VerticalAlignment="Top" Margin="5"/>
                    <Button x:Name="SavePCCsListButton" Content="Save List" VerticalAlignment="Top" HorizontalAlignment="Right" Style="{StaticResource PCCListOptionsStyle}" Background="White" Margin="5" Padding="10,2" Click="SavePCCsListButton_Click"/>
                    <ListBox x:Name="PCCsListBox" ItemsSource="{Binding ElementName=MainView, Path=SelectedItem.PCCs}" ItemTemplate="{StaticResource PCC-ExpID Displayer}" Margin="0,32,0,0.333"/>
                </Grid>
            </TabItem>
        </TabControl>
        

        <DockPanel Grid.Row="3" LastChildFill="False">
            <DockPanel.Resources>
                <Style BasedOn="{StaticResource MainButtonStyle}" TargetType="Button" x:Key="BigButtonStyle">
                    <Setter Property="IsEnabled" Value="True"/>

                    <Style.Triggers>
                        <DataTrigger Binding="{Binding Busy}" Value="true">
                            <Setter Property="IsEnabled" Value="False"/>
                        </DataTrigger>

                        <DataTrigger Binding="{Binding CurrentTree.Valid}" Value="false">
                            <Setter Property="IsEnabled" Value="False"/>
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </DockPanel.Resources>
            
            <Button Content="Install Textures" Style="{StaticResource BigButtonStyle}" FontSize="25" Margin="3" Padding="20,0" Command="{Binding InstallCommand}"/>
            <Button VerticalAlignment="Center" Padding="10,3" Command="{Binding AnalyseCommand}">
                <Button.Style>
                    <Style BasedOn="{StaticResource BigButtonStyle}" TargetType="Button">
                        <Setter Property="Content" Value="Analyse with Texplorer"/>

                        <Style.Triggers>
                            <DataTrigger Binding="{Binding AllAnalysed}" Value="True">
                                <Setter Property="Content" Value="De-Analyse"/>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </Button.Style>
            </Button>

            <TextBlock x:Name="BlankOutExplaination" VerticalAlignment="Center" Margin="5" Foreground="Red">
                <TextBlock.Style>
                    <Style TargetType="TextBlock">
                        <Setter Property="Visibility" Value="Collapsed"/>

                        <Style.Triggers>
                            <DataTrigger Binding="{Binding CurrentTree.Valid}" Value="false">
                                <Setter Property="Visibility" Value="Visible"/>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </TextBlock.Style>
                
                Current Tree not valid. 
                <LineBreak/>
                Check selected tree.
            </TextBlock>
        </DockPanel>

        <Border Background="#B2000000" Grid.RowSpan="5" Grid.ColumnSpan="5">
            <Border.Style>
                <Style TargetType="Border">
                    <Setter Property="Visibility" Value="Collapsed"/>
                    <Setter Property="Opacity" Value="0"/>

                    <Style.Triggers>
                        <DataTrigger Binding="{Binding IsTPFBuilding}" Value="true">
                            <DataTrigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetProperty="Opacity" From="0" To="1" Duration="0:0:0.5"/>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </BeginStoryboard>
                            </DataTrigger.EnterActions>

                            <DataTrigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetProperty="Opacity" From="1" To="0" Duration="0:0:0.5"/>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility">
                                            <DiscreteObjectKeyFrame KeyTime="0:0:0.5" Value="{x:Static Visibility.Collapsed}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </BeginStoryboard>
                            </DataTrigger.ExitActions>
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </Border.Style>
            <Border.Resources>
                <Style TargetType="TextBox">
                    <Setter Property="VerticalContentAlignment" Value="Center"/>
                    <Setter Property="Margin" Value="5,0"/>
                </Style>

                <Style TargetType="ContentControl" x:Key="ItemTitleStyle">
                    <Setter Property="FontWeight" Value="Bold"/>
                    <Setter Property="DockPanel.Dock" Value="Left"/>
                </Style>

                <Style TargetType="Run" x:Key="ItemTitleStyle_2">
                    <Setter Property="FontWeight" Value="Bold"/>
                    <Setter Property="DockPanel.Dock" Value="Left"/>
                </Style>

                <Style TargetType="ContentControl" x:Key="TitleStyle">
                    <Setter Property="FontSize" Value="30"/>
                    <Setter Property="FontWeight" Value="Bold"/>
                </Style>

                <Style TargetType="Button" x:Key="BrowseButtonStyle">
                    <Setter Property="DockPanel.Dock" Value="Right"/>
                    <Setter Property="Padding" Value="10,2"/>
                </Style>
            </Border.Resources>
            <Border Background="White" VerticalAlignment="Center" HorizontalAlignment="Center" CornerRadius="10" BorderBrush="White" BorderThickness="1">
                <StackPanel Margin="10">
                    
                    <Label Content="Save TPF - Details" Style="{StaticResource TitleStyle}"/>

                    <DockPanel>
                        <Label Content="Save Path: " Style="{StaticResource ItemTitleStyle}"/>
                        <Button Content="Browse" Style="{StaticResource BrowseButtonStyle}"/>
                        <TextBox Text="{Binding TPFSave_SavePath, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                    </DockPanel>

                    <TextBlock Margin="5">
                        <Run Text="Number of files: " Style="{StaticResource ItemTitleStyle_2}"/>
                        <Run Text="{Binding TPFSave_TexCount, Mode=OneWay}"/>
                    </TextBlock>

                    <StackPanel Orientation="Horizontal">
                        <Label Content="Author: " Style="{StaticResource ItemTitleStyle}"/>
                        <TextBox Text="{Binding TPFSave_Author, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                    </StackPanel>

                    <Label Content="Comment" Style="{StaticResource ItemTitleStyle}"/>
                    <TextBox Text="{Binding TPFSave_Comment, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" AcceptsReturn="True"/>

                    <DockPanel LastChildFill="False">
                        <DockPanel.Resources>
                            <Style TargetType="Button">
                                <Setter Property="Margin" Value="10,2"/>
                                <Setter Property="Padding" Value="10,2"/>
                                <Setter Property="Background" Value="White"/>
                            </Style>
                        </DockPanel.Resources>
                        <Button x:Name="TPFSaveSaveButton" Content="Save!" DockPanel.Dock="Left" Command="{Binding TPFSave_SaveCommand}"/>
                        <Button x:Name="TPFSaveCancelButton" Content="Cancel" DockPanel.Dock="Right" Command="{Binding TPFSave_CancelCommand}"/>

                    </DockPanel>
                    
                    <TextBlock Text="{Binding Status}" Margin="0,10,0,4"/>
                    <ProgressBar Value="{Binding Progress}" Maximum="{Binding MaxProgress}" IsIndeterminate="{Binding ProgressIndeterminate}" Height="20"/>
                </StackPanel>
            </Border>
        </Border>
    </Grid>
</Window>
